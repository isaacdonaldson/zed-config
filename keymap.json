[
  {
    "bindings": {
      // Move between tabs
      "cmd-[": "pane::ActivatePrevItem",
      "cmd-]": "pane::ActivateNextItem",

      // Switch focus on windows
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"],

      // Resize windows
      "ctrl-shift-h": ["vim::ResizePane", "Narrow"],
      "ctrl-shift-l": ["vim::ResizePane", "Widen"],
      "ctrl-shift-j": ["vim::ResizePane", "Shorten"],
      "ctrl-shift-k": ["vim::ResizePane", "Lengthen"]
    }
  },
  {
    "context": "Editor",
    "bindings": {
      // Allow selected or single lines to be moved as a group up and down
      "alt-k": "editor::MoveLineUp",
      "alt-j": "editor::MoveLineDown",
      // Open Neogit (git magit viewer)
      "space g n t": ["task::Spawn", { "task_name": "Neogit" }]
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    // Put key-bindings here if you want them to work in normal & visual mode
    "bindings": {
      // Turn off regex when searching with /
      // "/": ["vim::Search", { "regex": false }],

      // Allow j and k to navigate over wrapped lines
      "j": ["vim::Down", { "displayLines": true }],
      "k": ["vim::Up", { "displayLines": true }],

      // Disable arrow key navigation
      "up": "zed::NoAction",
      "down": "zed::NoAction",
      "left": "zed::NoAction",
      "right": "zed::NoAction",

      // LSP code actions
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "g I": "editor::GoToImplementationSplit",
      "g t": "editor::GoToTypeDefinition",
      "g T": "editor::GoToTypeDefinitionSplit",

      // Split panel in direction
      "space s d": "pane::SplitDown",
      "space s l": "pane::SplitLeft",
      "space s r": "pane::SplitRight",
      "space s u": "pane::SplitUp",
      "space |": "pane::SplitRight", // To the right
      "space \\": "pane::SplitDown", // To the left

      // Toggle git blame
      "space g b": "editor::ToggleGitBlameInline",
      // Toggle git hunk
      "space g h": "editor::ToggleHunkDiff",
      // Revert git hunk
      "space g r h": "editor::RevertSelectedHunks",
      // Open Neogit (git magit viewer)
      "space g n t": ["task::Spawn", { "task_name": "Neogit" }],

      // Go to next git hunk
      "[ h": "editor::GoToHunk",
      "] h": "editor::GoToPrevHunk",
      // Find file
      "space f f": "file_finder::Toggle",
      // Find words
      "space f w": "workspace::NewSearch",
      // Format file
      "space u f": "editor::Format",
      // Toggle left dock (file-tree)
      "space e": "workspace::ToggleLeftDock",
      // Toggle comments
      "space /": "editor::ToggleComments",
      // Navigating through matches
      "n": "search::SelectNextMatch",
      "shift-n": "search::SelectPrevMatch",
      // Open horizontal terminal
      "space t h": "workspace::NewTerminal",
      // Open terminal as tab
      "space t c": "workspace::NewCenterTerminal",
      // Close current buffer (tab)
      "space b d": "pane::CloseActiveItem",
      // Navigate to the buffer (tab) on the left or right
      "[ b": "pane::ActivatePrevItem",
      "] b": "pane::ActivateNextItem",
      "space b p": "pane::TogglePinTab",
      // Rename variable
      "space c r": "editor::Rename",
      // Display diagnostic inline
      "space c d": "editor::Hover",
      // Open markdown previewer
      "space m v": "markdown::OpenPreviewToTheSide",
      // Toggle bottom dock (terminal)
      "ctrl-\\": "workspace::ToggleBottomDock",
      // Toggle inlay type hints
      "space i h": "editor::ToggleInlayHints",
      // Copy relative path
      "space c p": "editor::CopyRelativePath",
      // Open task spawning popup
      "space s t": "task::Spawn",
      // Navigate to the next/prev diagnostic
      "[ d": "editor::GoToDiagnostic",
      "] d": "editor::GoToPrevDiagnostic",
      // Bring up the diagnostic page
      "space x x": "diagnostics::Deploy",

      // Symbol searching
      "space s s": "outline::Toggle",
      "space s S": "project_symbols::Toggle",

      // Open assistant
      "cmd r": "assistant::ToggleFocus"
    }
  },
  // Insert Mode
  {
    "context": "vim_mode == insert",
    "bindings": {
      // Code actions
      "ctrl-c ctrl-a": "editor::ToggleCodeActions",
      "ctrl-c ctrl-o": "editor::ShowCompletions",
      "ctrl-c ctrl-c": "editor::ShowInlineCompletion",

      // Open assistant
      "cmd r": "assistant::ToggleFocus"
    }
  },
  // File panel (netrw)
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      // Close project panel as project file panel on the left
      "q": "workspace::ToggleLeftDock",
      "space e": "workspace::ToggleLeftDock",
      // Toggle bottom dock (terminal)
      "ctrl-\\": "workspace::ToggleBottomDock",
      // Open assistant
      "cmd r": "assistant::ToggleFocus",
      // Open Neogit (git magit viewer)
      "space g n t": ["task::Spawn", { "task_name": "Neogit" }]
    }
  },
  // Terminal panel
  {
    "context": "Terminal",
    "bindings": {
      // New terminal tab
      "cmd-t": "workspace::NewTerminal",

      // Terminal splitting
      "ctrl-s d": "pane::SplitDown",
      "ctrl-s l": "pane::SplitLeft",
      "ctrl-s r": "pane::SplitRight",
      "ctrl-s u": "pane::SplitUp",

      // Toggling the terminal
      "ctrl-\\": "workspace::ToggleBottomDock"
    }
  },
  // Assistant panel
  {
    "context": "AssistantPanel",
    "bindings": {
      // Allow selected or single lines to be moved as a group up and down
      "ctrl-<": "assistant::InsertIntoEditor",
      "ctrl-,": "assistant::InsertIntoEditor",
      "ctrl-c": "assistant::CopyCode",
      "ctrl-enter": "assistant::Assist",
      "cmd-t": "assistant::NewContext"
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      // Find file
      "space f f": "file_finder::Toggle",
      // Find words
      "space f w": "workspace::NewSearch",
      // Toggle left dock (file-tree)
      "space e": "workspace::ToggleLeftDock"
    }
  }
]
