[
  {
    "bindings": {
      // Global workspace close tab
      "ctrl-shift-globct": "pane::CloseActiveItem",

      // Move between tabs
      "cmd-[": "pane::ActivatePreviousItem",
      "cmd-]": "pane::ActivateNextItem",

      // Switch focus on windows
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",

      // Move items to different panes
      "ctrl-shift-h": ["workspace::MoveItemToPaneInDirection", { "direction": "left", "focus": true }],
      "ctrl-shift-l": ["workspace::MoveItemToPaneInDirection", { "direction": "right", "focus": true }],
      "ctrl-shift-k": ["workspace::MoveItemToPaneInDirection", { "direction": "up", "focus": true }],
      "ctrl-shift-j": ["workspace::MoveItemToPaneInDirection", { "direction": "down", "focus": true }],

      // Resize windows
      "ctrl-cmd-h": "vim::ResizePaneLeft",
      "ctrl-cmd-l": "vim::ResizePaneRight",
      "ctrl-cmd-k": "vim::ResizePaneUp",
      "ctrl-cmd-j": "vim::ResizePaneDown"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      // Don't put space bindings in here as it causes input pausing problems

      // Allow selected or single lines to be moved as a group up and down
      "alt-k": "editor::MoveLineUp",
      "alt-j": "editor::MoveLineDown"
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    // Put key-bindings here if you want them to work in normal & visual mode
    "bindings": {
      // Turn off regex when searching with /
      // "/": ["vim::Search", { "regex": false }],
      "/": "buffer_search::Deploy",

      // Allow j and k to navigate over wrapped lines
      "j": ["vim::Down", { "display_lines": true }],
      "k": ["vim::Up", { "display_lines": true }],

      // Disable arrow key navigation
      "up": null,
      "down": null,
      "left": null,
      "right": null,

      // LSP code actions
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "g I": "editor::GoToImplementationSplit",
      "g y": "editor::GoToTypeDefinition",
      "g Y": "editor::GoToTypeDefinitionSplit",

      // Split panel in direction
      "space s d": "pane::SplitDown",
      "space s l": "pane::SplitLeft",
      "space s r": "pane::SplitRight",
      "space s u": "pane::SplitUp",
      "space |": "pane::SplitRight", // To the right
      "space \\": "pane::SplitDown", // To the left

      // Toggle git blame
      "space g b": "editor::ToggleGitBlameInline",
      // Toggle git blame for the whole file
      "space g B": "git::Blame",
      // Toggle git hunk
      "space g h": "editor::ToggleSelectedDiffHunks",
      // Revert git hunk
      "space g r h": "git::Restore",
      // Git change branch
      "space s b": "git::CheckoutBranch",
      // Open Neogit (git magit viewer)
      // "space g n t": ["task::Spawn", { "task_name": "Neogit" }],
      // Open git editor
      "ctrl-shift-gd": "git::Diff",
      "ctrl-shift-gf": "git_panel::ToggleFocus",
      "space g n t": ["workspace::SendKeystrokes", "ctrl-shift-gd ctrl-shift-g"],

      // Go to next git hunk
      "] h": "editor::GoToHunk",
      "[ h": "editor::GoToPreviousHunk",
      // Find file
      "space f f": "file_finder::Toggle",
      // Find words
      "space f w": "workspace::NewSearch",
      // Format file
      "space u f": "editor::Format",
      // Toggle file-tree
      "space e": "project_panel::ToggleFocus",
      // Open file in file-tree
      "space o e": "pane::RevealInProjectPanel",
      // Toggle comments
      "space /": "editor::ToggleComments",
      // Navigating through matches
      "n": "search::SelectNextMatch",
      "shift-n": "search::SelectPreviousMatch",
      // Open horizontal terminal
      "space t h": "workspace::NewTerminal",
      // Open terminal as tab
      "space t c": "workspace::NewCenterTerminal",
      // Close current buffer (tab)
      "space b d": "pane::CloseActiveItem",
      // Navigate to the buffer (tab) on the left or right
      "[ b": "pane::ActivatePreviousItem",
      "] b": "pane::ActivateNextItem",
      "shift-h": "pane::ActivatePreviousItem",
      "shift-l": "pane::ActivateNextItem",
      "space b p": "pane::TogglePinTab",
      // Rename variable
      "space c r": "editor::Rename",
      // Display diagnostic inline
      "space c d": "editor::Hover",
      // Code actions dropdown
      "space c a": "editor::ToggleCodeActions",
      // Completions dropdown
      "space c o": "editor::ShowCompletions",
      // Open markdown previewer
      "space m v": "markdown::OpenPreviewToTheSide",
      // Toggle bottom dock (terminal)
      "ctrl-\\": "workspace::ToggleBottomDock",
      // Toggle inlay type hints
      "space i h": "editor::ToggleInlayHints",
      // Copy relative path
      "space c p": "workspace::CopyRelativePath",
      // Open task spawning popup
      "space s t": "task::Spawn",
      // Navigate to the next/prev diagnostic
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPreviousDiagnostic",
      // Bring up the diagnostic page
      "space x x": "diagnostics::Deploy",

      // Symbol searching
      "space s s": "outline::Toggle",
      "space s S": "project_symbols::Toggle",

      // Open assistant
      "cmd r": "agent::ToggleFocus",

      // Open new tab
      "cmd-t": "workspace::NewFile",

      // List all current Marks
      "space m l": "vim::ToggleMarksView",

      // Set Marks
      "ctrl-shift-pshmrk": "vim::PushMark",
      "space m s 1": ["workspace::SendKeystrokes", "ctrl-shift-pshmrk a"],
      "space m s 2": ["workspace::SendKeystrokes", "ctrl-shift-pshmrk b"],
      "space m s 3": ["workspace::SendKeystrokes", "ctrl-shift-pshmrk c"],
      "space m s 4": ["workspace::SendKeystrokes", "ctrl-shift-pshmrk d"],
      "space m s 5": ["workspace::SendKeystrokes", "ctrl-shift-pshmrk e"],
      "space m s 6": ["workspace::SendKeystrokes", "ctrl-shift-pshmrk f"],
      "space m s 7": ["workspace::SendKeystrokes", "ctrl-shift-pshmrk g"],
      "space m s 8": ["workspace::SendKeystrokes", "ctrl-shift-pshmrk h"],
      "space m s 9": ["workspace::SendKeystrokes", "ctrl-shift-pshmrk i"],
      "space m s 0": ["workspace::SendKeystrokes", "ctrl-shift-pshmrk j"],

      // Navigate to Marks
      "space 1": ["workspace::SendKeystrokes", "` a z z"],
      "space 2": ["workspace::SendKeystrokes", "` b z z"],
      "space 3": ["workspace::SendKeystrokes", "` c z z"],
      "space 4": ["workspace::SendKeystrokes", "` d z z"],
      "space 5": ["workspace::SendKeystrokes", "` e z z"],
      "space 6": ["workspace::SendKeystrokes", "` f z z"],
      "space 7": ["workspace::SendKeystrokes", "` g z z"],
      "space 8": ["workspace::SendKeystrokes", "` h z z"],
      "space 9": ["workspace::SendKeystrokes", "` i z z"],
      "space 0": ["workspace::SendKeystrokes", "` j z z"],

      // Restore Visual Selection
      "ctrl-alt-restVsel": "vim::RestoreVisualSelection",

      // Duplicate line and comment first one
      "shift-y shift-y": ["workspace::SendKeystrokes", "y y g c c p"]
    }
  },
  // Insert Mode
  {
    "context": "vim_mode == insert",
    "bindings": {
      // Code actions
      "ctrl-c ctrl-a": "editor::ToggleCodeActions",
      "ctrl-c ctrl-o": "editor::ShowCompletions",
      "ctrl-c ctrl-c": "editor::ShowEditPrediction",

      // Open assistant
      "cmd r": "agent::ToggleFocus"
    }
  },
  // Visual Mode
  {
    "context": "vim_mode == visual",
    "bindings": {
      "ctrl-alt-swapselend": "editor::SwapSelectionEnds",
      "shift-y": ["workspace::SendKeystrokes", "y ctrl-alt-restVsel g c ctrl-alt-restVsel ctrl-alt-swapselend p P"]
    }
  },
  // Git panel
  {
    "context": "GitPanel",
    "bindings": {
      // So an abandoned space cmd does not stage file
      "space": null,

      // Toggle file-tree
      "space e": "project_panel::ToggleFocus",

      // Close git panel
      "ctrl-shift-gd": "git::Diff",
      "ctrl-shift-gf": "git_panel::ToggleFocus",
      "ctrl-shift-gc": "git_panel::Close",
      "space g n t": ["workspace::SendKeystrokes", "ctrl-shift-gd ctrl-shift-globct ctrl-shift-gf ctrl-shift-gc"],

      // Switch branches
      "space s b": "git::CheckoutBranch",

      // Git fetch
      "space f": "git::Fetch",
      // Git pull
      "space p": "git::Pull",
      // Git push
      "space P": "git::Push",
      // Git force push
      "space F": "git::ForcePush"
    }
  },
  // Git diff views
  {
    "context": "GitDiff > Editor",
    "bindings": {
      // Toggle file-tree
      "space e": "project_panel::ToggleFocus",
      // Open file from search result
      "enter": "editor::OpenExcerpts",
      // Navigate to next/previous match
      "tab": "editor::ToggleFold",
      // Close git diff view
      "ctrl-shift-gf": "git_panel::ToggleFocus",
      "space g n t": ["workspace::SendKeystrokes", "ctrl-shift-gf space g n t"],
      // Stage file
      "s": "git::ToggleStaged",
      // Unstage file
      "u": "git::Restore",
      // Discard file
      "x": "git::Restore",
      // Open the commit editor
      "c": "git::ExpandCommitEditor",

      // Git fetch
      "space f": "git::Fetch",
      // Git pull
      "space p": "git::Pull",
      // Git push
      "space P": "git::Push",
      // Git force push
      "space F": "git::ForcePush"
    }
  },
  // Git panel left side list of changes
  {
    "context": "GitPanel && ChangesList",
    "bindings": {
      // Toggle file-tree
      "space e": "project_panel::ToggleFocus",
      "tab": "editor::ToggleFold",
      // Stage file
      "s": "git::StageFile",
      // Unstage file
      "u": "git::UnstageFile",
      // Undo last commit
      // "U": "git::UnstageFile",
      "a": "git::Add",
      // Discard/Trash a file
      "x": "git::RestoreFile",
      // Open the commit editor
      "c": "git::ExpandCommitEditor",

      // Git fetch
      "space f": "git::Fetch",
      // Git pull
      "space p": "git::Pull",
      // Git push
      "space P": "git::Push",
      // Git force push
      "space F": "git::ForcePush"
    }
  },
  // File panel (netrw)
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      "f": "project_panel::NewSearchInDirectory",
      "g": "project_panel::SelectNextGitEntry",
      "G": "project_panel::SelectPrevGitEntry",
      // Close project panel as project file panel on the left
      "q": "workspace::ToggleLeftDock",
      "space e": "workspace::ToggleLeftDock",
      // Toggle bottom dock (terminal)
      "ctrl-\\": "workspace::ToggleBottomDock",
      // Open assistant
      "cmd r": "agent::ToggleFocus",

      // Open git editor
      "ctrl-shift-gd": "git::Diff",
      "ctrl-shift-gf": "git_panel::ToggleFocus",
      "space g n t": ["workspace::SendKeystrokes", "ctrl-shift-gd ctrl-shift-g"]
    }
  },
  // Terminal panel
  {
    "context": "Terminal",
    "bindings": {
      // Toggle terminal vi mode
      // "ctrl-shift-t": "terminal::ToggleViMode",
      // New terminal tab
      "cmd-t": "workspace::NewTerminal",

      // Terminal splitting
      "ctrl-s d": "pane::SplitDown",
      "ctrl-s l": "pane::SplitLeft",
      "ctrl-s r": "pane::SplitRight",
      "ctrl-s u": "pane::SplitUp",

      // Toggling the terminal
      "ctrl-\\": "workspace::ToggleBottomDock"
    }
  },
  // Search panel
  {
    "context": "VimControl && !menu",
    "bindings": {
      // Toggle file-tree
      "space e": "project_panel::ToggleFocus",
      // Open file from search result
      "enter": "editor::OpenExcerpts",
      // Fold and unfold search results
      "tab": "editor::ToggleFold"
    }
  },
  // Assistant panel
  {
    "context": "AssistantPanel",
    "bindings": {
      // Allow selected or single lines to be moved as a group up and down
      "ctrl-<": "assistant::InsertIntoEditor",
      "ctrl-,": "assistant::InsertIntoEditor",
      "ctrl-c": "assistant::CopyCode",
      "ctrl-enter": "assistant::Assist",
      "cmd-t": "agent::NewThread"
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      // Open git editor
      "ctrl-shift-gd": "git::Diff",
      "ctrl-shift-gf": "git_panel::ToggleFocus",
      "space g n t": ["workspace::SendKeystrokes", "ctrl-shift-gd ctrl-shift-g"],
      // Find file
      "space f f": "file_finder::Toggle",
      // Find words
      "space f w": "workspace::NewSearch",
      // Toggle file-tree
      "space e": "project_panel::ToggleFocus"
    }
  }
]
