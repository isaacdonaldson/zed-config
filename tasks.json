[
  {
    "label": "Cargo watch",
    "command": "cargo watch -q -c -x \"run -q\"",
    //"args": [],
    "tags": ["cargo", "watch", "rust", "dev"],

    "use_new_terminal": true,
    "allow_concurrent_runs": false,
    // What to do with the terminal pane and tab, after the command was started:
    // * `always` — always show the terminal pane, add and focus the corresponding task's tab in it (default)
    // * `never` — avoid changing current terminal pane focus, but still add/reuse the task's tab there
    "reveal": "always",
    "hide": "never",
    "shell": "system"
  },
  {
    "label": "Sync down Zed settings",
    "command": "cd ~/.config/zed && git pull",
    //"args": [],
    "tags": ["sync", "settings"],

    "use_new_terminal": true,
    "allow_concurrent_runs": false,
    // What to do with the terminal pane and tab, after the command was started:
    // * `always` — always show the terminal pane, add and focus the corresponding task's tab in it (default)
    // * `never` — avoid changing current terminal pane focus, but still add/reuse the task's tab there
    "reveal": "always",
    "hide": "never",
    "shell": "system"
  },
  {
    "label": "Git history of repo (optional commit start, restores to current branch & commit)",
    "command": "bash -c 'BRANCH=$(git symbolic-ref --short -q HEAD); COMMIT=$(git rev-parse HEAD); START=${BRANCH:-${COMMIT:-\"main\"}}; echo \"Commit Hash\"; read HASH; [[ $HASH ]] && HASH=^$HASH^; for commit in $(git rev-list $START $HASH --reverse); do git checkout $commit; read; done; git checkout $START'",
    "tags": ["history", "changes", "git", "repo"],

    "use_new_terminal": true,
    "allow_concurrent_runs": false,
    "reveal": "always",
    "hide": "never",
    "shell": "system"
  },
  {
    /*** THESE ARE EQUIVALENT COMMANDS ***/
    // "command": "bash -c 'BRANCH=$(git symbolic-ref --short -q HEAD); BRANCH_COMMIT=$(git merge-base origin/master $BRANCH); git diff $BRANCH_COMMIT..$BRANCH'",
    // "command": "bash -c 'BRANCH=$(git symbolic-ref --short -q HEAD); git diff origin/master..$BRANCH'",
    "label": "Git PR diffs",
    "command": "git diff master...",
    "tags": ["diff", "pr", "changes", "git"],

    "use_new_terminal": true,
    "allow_concurrent_runs": false,
    "reveal": "always",
    "hide": "never",
    "shell": "system"
  },
  {
    "label": "Terminal Snow",
    "command": "bash -c 'while sleep 0.1; do printf \"%-$(( ( RANDOM % `tput cols` ) - 1))s*\n\" ; done'",
    //"args": [],
    "use_new_terminal": true,
    "allow_concurrent_runs": false,
    // What to do with the terminal pane and tab, after the command was started:
    // * `always` — always show the terminal pane, add and focus the corresponding task's tab in it (default)
    // * `never` — avoid changing current terminal pane focus, but still add/reuse the task's tab there
    "reveal": "always",
    "hide": "never",
    "shell": "system"
  }
]
